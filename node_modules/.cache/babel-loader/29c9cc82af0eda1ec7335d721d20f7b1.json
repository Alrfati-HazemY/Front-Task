{"ast":null,"code":"var _jsxFileName = \"/home/hazem/Documents/Front-Task/src/views/Posts/PostsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PostCard from './PostCard';\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  post_list_container: {\n    backgroundColor: \"#626477\",\n    padding: \"60px 100px 30px 100px\",\n    minHeight: \"calc(100vh - 65px)\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\"\n  },\n  [theme.breakpoints.down(\"md\")]: {\n    post_list_container: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      padding: \"20px 10px 10px 10px\"\n    }\n  }\n}));\nexport const PostsList = props => {\n  _s();\n\n  const {\n    loggedIn,\n    setLoggedIn,\n    setUserLoggedIn,\n    userLoggedIn\n  } = useContext(LoginCtx);\n  const classes = useStyles();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => {\n      return response.json();\n    }).then(data => {\n      let allPosts = data;\n      let user = props.userLoggedIn;\n      let userPosts = allPosts.filter((post, index) => {\n        return post.userId === user.id;\n      });\n      setPosts(userPosts);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    className: classes.post_list_container,\n    children: posts.map((post, index) => {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostsList, \"KJEATwiL4Zdj5lkBlB6Aee4WV8Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = PostsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"sources":["/home/hazem/Documents/Front-Task/src/views/Posts/PostsList.js"],"names":["React","useEffect","useState","PostCard","Container","makeStyles","useStyles","theme","post_list_container","backgroundColor","padding","minHeight","display","flexWrap","justifyContent","breakpoints","down","flexDirection","alignItems","PostsList","props","loggedIn","setLoggedIn","setUserLoggedIn","userLoggedIn","useContext","LoginCtx","classes","posts","setPosts","fetch","then","response","json","data","allPosts","user","userPosts","filter","post","index","userId","id","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAU;AACrCC,EAAAA,mBAAmB,EAAG;AACpBC,IAAAA,eAAe,EAAE,SADG;AAEpBC,IAAAA,OAAO,EAAE,uBAFW;AAGpBC,IAAAA,SAAS,EAAE,oBAHS;AAIpBC,IAAAA,OAAO,EAAG,MAJU;AAKpBC,IAAAA,QAAQ,EAAG,MALS;AAMpBC,IAAAA,cAAc,EAAC;AANK,GADe;AASrC,GAACP,KAAK,CAACQ,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAiC;AAC/BR,IAAAA,mBAAmB,EAAG;AACpBS,MAAAA,aAAa,EAAG,QADI;AAEpBC,MAAAA,UAAU,EAAG,QAFO;AAGpBR,MAAAA,OAAO,EAAG;AAHU;AADS;AATI,CAAV,CAAD,CAA5B;AAmBA,OAAO,MAAMS,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAElC,QAAM;AAACC,IAAAA,QAAD;AAAYC,IAAAA,WAAZ;AAA0BC,IAAAA,eAA1B;AAA4CC,IAAAA;AAA5C,MAA6DC,UAAU,CAACC,QAAD,CAA7E;AAGA,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,QAAM,CAACsB,KAAD,EAASC,QAAT,IAAqB3B,QAAQ,CAAC,EAAD,CAAnC;AAEAD,EAAAA,SAAS,CACP,MAAM;AACN6B,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACQC,QAAD,IAAc;AACnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHD,EAICF,IAJD,CAIOG,IAAD,IAAQ;AACZ,UAAIC,QAAQ,GAAGD,IAAf;AACA,UAAIE,IAAI,GAAOhB,KAAK,CAACI,YAArB;AACA,UAAIa,SAAS,GAAGF,QAAQ,CAACG,MAAT,CAAgB,CAACC,IAAD,EAAMC,KAAN,KAAgB;AAC9C,eAAOD,IAAI,CAACE,MAAL,KAAgBL,IAAI,CAACM,EAA5B;AACD,OAFe,CAAhB;AAGAb,MAAAA,QAAQ,CAACQ,SAAD,CAAR;AACD,KAXD;AAYD,GAdQ,EAeR,EAfQ,CAAT;AAiBA,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEV,OAAO,CAACnB,mBAA5C;AAAA,cACGoB,KAAK,CAACe,GAAN,CAAU,CAACJ,IAAD,EAAMC,KAAN,KAAc;AACvB,0BACE,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAED;AAA9B,SAAiBC,KAAjB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlCM;;GAAMrB,S;UAKKb,S;;;KALLa,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport PostCard from './PostCard';\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme)=>({\n  post_list_container : {\n    backgroundColor: \"#626477\",\n    padding: \"60px 100px 30px 100px\",\n    minHeight: \"calc(100vh - 65px)\",\n    display : \"flex\",\n    flexWrap : \"wrap\",\n    justifyContent:\"space-between\",\n  },\n  [theme.breakpoints.down(\"md\")] : {\n    post_list_container : {\n      flexDirection : \"column\",\n      alignItems : \"center\",\n      padding : \"20px 10px 10px 10px\"\n    }\n  }\n}))\n\n\nexport const PostsList = (props) => {\n\n  const {loggedIn , setLoggedIn , setUserLoggedIn , userLoggedIn } = useContext(LoginCtx);\n\n\n  const classes = useStyles();\n  const [posts , setPosts] = useState([]);\n\n  useEffect(\n    () => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n    .then( (response) => {\n      return response.json()\n    })\n    .then((data)=>{\n      let allPosts = data;\n      let user     = props.userLoggedIn\n      let userPosts = allPosts.filter((post,index) => {\n        return post.userId === user.id\n      })\n      setPosts(userPosts)\n    })\n  }\n  ,[])\n\n  return (\n    <Container maxWidth=\"xl\" className={classes.post_list_container}>\n      {posts.map((post,index)=>{\n        return (\n          <PostCard key = {index} post={post} />\n        )\n      })}\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}