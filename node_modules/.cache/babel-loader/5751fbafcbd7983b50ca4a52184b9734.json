{"ast":null,"code":"var _jsxFileName = \"/home/hazem/Documents/Front-Task/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport './Login.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [users, setUsers] = useState([]);\n  const [{\n    email,\n    password\n  }, setLoginForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    setUsers(() => {\n      return JSON.parse(localStorage.getItem(\"users\"));\n    });\n  }, []);\n\n  const loginValuesHandler = event => {\n    setLoginForm(preState => {\n      return { ...preState,\n        [event.target.name]: event.target.value\n      };\n    });\n  };\n\n  const loginFormHandler = event => {\n    event.preventDefault();\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      setError(\"Please fill in all inputs\");\n    } else if (users) {\n      let user = users.filter((ele, index) => {\n        return ele.email === email;\n      })[0];\n\n      if (user) {\n        if (user.password === password) {\n          props.setLoggedIn(true);\n          localStorage.setItem(\"userLoggedIn\", JSON.stringify(user));\n          props.setUserLoggedIn(user);\n          navigate(\"/\");\n        } else {\n          setError(\"Password is not correct\");\n        }\n      } else {\n        setError(\"Email is not exist\");\n      }\n    } else {\n      setError(\"Email is not exist\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form_box\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          \"data-testid\": \"email\",\n          onChange: loginValuesHandler,\n          value: email,\n          name: \"email\",\n          className: \"login-form_input\",\n          id: \"standard-basic\",\n          label: \"Email\",\n          InputLabelProps: {\n            style: {\n              color: '#ddd'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form_box\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          \"data-testid\": \"password\",\n          onChange: loginValuesHandler,\n          value: password,\n          name: \"password\",\n          type: \"password\",\n          className: \"login-form_input\",\n          id: \"standard-basic\",\n          label: \"Password\",\n          InputLabelProps: {\n            style: {\n              color: '#ddd'\n            }\n          },\n          style: {\n            color: \"white !important\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: ` ${error ? \"login-error-opacity\" : \"\"} error login-error`,\n          children: error ? error : \"Please fill in all inputs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: loginFormHandler,\n        id: \"login-btn\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"S9qSCsCUE36nSoWrT6n1byyVjGQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/hazem/Documents/Front-Task/src/components/Login/Login.js"],"names":["React","useEffect","useState","TextField","Button","useNavigate","Login","props","navigate","users","setUsers","email","password","setLoginForm","error","setError","JSON","parse","localStorage","getItem","loginValuesHandler","event","preState","target","name","value","loginFormHandler","preventDefault","trim","length","user","filter","ele","index","setLoggedIn","setItem","stringify","setUserLoggedIn","style","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport './Login.css'\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Login = (props) => {\n\n  const navigate = useNavigate();\n\n  const [users,setUsers] = useState([]);\n\n  const [{email,password},setLoginForm] = useState({\n    email    : \"\",\n    password : \"\",\n  }) \n\n  const [error , setError] = useState(\"\")\n\n  useEffect(\n    () => {\n      setUsers (\n        () => {\n          return JSON.parse(localStorage.getItem(\"users\"))\n        }\n      )\n    }\n  , [])\n\n  const loginValuesHandler = (event) => {\n    setLoginForm(\n      (preState) => {\n        return{...preState , [event.target.name] : event.target.value}\n      }\n    )\n  } \n\n  const loginFormHandler = (event) => {\n    event.preventDefault();\n    if(email.trim().length === 0 || password.trim().length === 0 )\n      {\n        setError(\"Please fill in all inputs\");\n      }\n      else if(users) {\n        let user = users.filter((ele,index)=>{\n          return ele.email === email\n        })[0]\n        if(user) {\n          if(user.password === password) {\n          props.setLoggedIn(true);\n          localStorage.setItem(\"userLoggedIn\",JSON.stringify(user))\n          props.setUserLoggedIn(user)\n          navigate(\"/\")\n        }\n          else {\n            setError(\"Password is not correct\");\n          }\n        }\n        else {\n          setError(\"Email is not exist\");\n        }\n      }\n        else {\n          setError(\"Email is not exist\");\n        }\n}\n\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"login-form\" autoComplete=\"off\">\n          <h1>Login</h1>\n        <div className=\"login-form_box\">\n          <TextField data-testid=\"email\" onChange={loginValuesHandler} value={email} name=\"email\" className=\"login-form_input\" id=\"standard-basic\" label=\"Email\" InputLabelProps={ { style: { color: '#ddd' } } } />\n        </div>\n        <div className=\"login-form_box\">\n          <TextField data-testid=\"password\" onChange={loginValuesHandler} value={password} name=\"password\" type=\"password\" className=\"login-form_input\" id=\"standard-basic\" label=\"Password\" InputLabelProps={ { style: { color: '#ddd' } } } style={{color : \"white !important\"}} />\n          <div className={` ${error ? \"login-error-opacity\" : \"\"} error login-error`}>\n          {error ? error : \"Please fill in all inputs\"}\n          </div>\n        </div>\n        <Button onClick={loginFormHandler} id=\"login-btn\" variant=\"contained\" color=\"primary\">\n          Login\n        </Button>\n      </form>\n      </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}