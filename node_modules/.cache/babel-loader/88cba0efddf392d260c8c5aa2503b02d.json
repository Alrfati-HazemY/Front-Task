{"ast":null,"code":"var _jsxFileName = \"/home/hazem/Documents/Front-Task/src/views/Signup/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { LoginCtx } from \"../../context/LoginContex\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    height: \"calc(100vh - 65px)\",\n    backgroundImage: 'url(\"/images/login.jpg\")',\n    backgroundSize: \"cover\",\n    position: \"relative\"\n  },\n  form: {\n    backgroundColor: \"#2b2d42\",\n    boxShadow: \"0 10px 20px rgba(0, 0, 0, 0.19), 0 3px 6px rgba(0, 0, 0, 0.23)\",\n    width: \"40%\",\n    padding: \"20px\",\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"40%\",\n    transform: \"translate(-50%, -40%)\",\n    borderRadius: \"5px\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"60%\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"85%\"\n    }\n  },\n  title: {\n    textAlign: \"center\",\n    fontFamily: \"Arial, Helvetica, sans-serif\",\n    fontSize: \"32px\",\n    marginBottom: \"15px\",\n    color: \"white\"\n  },\n  loginForm: {\n    marginBottom: \"20px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    position: \"relative\"\n  },\n  login_form_input: {\n    width: \"90%\",\n    margin: \"auto\"\n  },\n  error: {\n    color: \"#ff6a6a\",\n    fontWeight: \"300\",\n    fontSize: \"14px\",\n    width: \"100%\",\n    paddingTop: \"5px\",\n    paddingLeft: \"2em\"\n  },\n  login_btn: {\n    display: \"block\",\n    margin: \"auto\",\n    padding: \"10px 25px\",\n    fontSize: \"16px\",\n    marginTop: \"20px\"\n  },\n  multilineColor: {\n    color: \"white\"\n  }\n}));\nexport const Signup = props => {\n  _s();\n\n  const {\n    setUserLoggedIn,\n    setLoggedIn\n  } = useContext(LoginCtx);\n  const classes = useStyles();\n\n  if (!localStorage.getItem(\"count\")) {\n    localStorage.setItem(\"count\", 1);\n  }\n\n  const navigate = useNavigate();\n  const [{\n    name,\n    email,\n    password,\n    cPassword\n  }, setRegisterForm] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    cPassword: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const RegisterValuesHandler = event => {\n    setRegisterForm(preState => {\n      return { ...preState,\n        [event.target.name]: event.target.value\n      };\n    });\n  };\n\n  const RegisterSubmitHandler = event => {\n    event.preventDefault();\n    let userId = JSON.parse(localStorage.getItem(\"count\"));\n    let user = {\n      id: userId,\n      name: name,\n      email: email,\n      password: password\n    };\n    const status = RegisterValidation(user);\n\n    if (status) {\n      if (localStorage.getItem(\"users\")) {\n        let users = JSON.parse(localStorage.getItem(\"users\"));\n        users.push(user);\n        localStorage.setItem(\"users\", JSON.stringify(users));\n      } else {\n        localStorage.setItem(\"users\", JSON.stringify([user]));\n      }\n\n      setLoggedIn(true);\n      localStorage.setItem(\"count\", JSON.stringify(userId + 1));\n      localStorage.setItem(\"userLoggedIn\", JSON.stringify(user));\n      setUserLoggedIn(user);\n      navigate(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"calc(100vh - 65px)\",\n    maxWidth: \"xl\",\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.form,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        maxWidth: \"xl\",\n        className: classes.loginForm,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          InputProps: {\n            className: classes.multilineColor\n          },\n          error: errors.eName ? true : false,\n          onChange: RegisterValuesHandler,\n          name: \"name\",\n          value: name,\n          className: classes.login_form_input,\n          label: \"Full Name\",\n          InputLabelProps: {\n            style: {\n              color: \"#ddd\"\n            }\n          },\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.error,\n          children: errors.eName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loginForm,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          error: errors.eEmail ? true : false,\n          onChange: RegisterValuesHandler,\n          name: \"email\",\n          value: email,\n          className: classes.login_form_input,\n          label: \"Email\",\n          InputLabelProps: {\n            style: {\n              color: \"#ddd\"\n            }\n          },\n          InputProps: {\n            className: classes.multilineColor\n          },\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.error,\n          children: errors.eEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loginForm,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: RegisterValuesHandler,\n          name: \"password\",\n          value: password,\n          type: \"password\",\n          className: classes.login_form_input,\n          label: \"Password\",\n          InputLabelProps: {\n            style: {\n              color: \"#ddd\"\n            }\n          },\n          InputProps: {\n            className: classes.multilineColor\n          },\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loginForm,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          error: errors.eCPassword ? true : false,\n          onChange: RegisterValuesHandler,\n          name: \"cPassword\",\n          value: cPassword,\n          type: \"password\",\n          className: classes.login_form_input,\n          label: \"Confirm Password\",\n          InputLabelProps: {\n            style: {\n              color: \"#ddd\"\n            }\n          },\n          InputProps: {\n            className: classes.multilineColor\n          },\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.error,\n          children: errors.eCPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: RegisterSubmitHandler,\n        className: classes.login_btn,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"jpzncYPWneXxxIsyK2D1r+aRCMo=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/hazem/Documents/Front-Task/src/views/Signup/Signup.js"],"names":["React","useContext","useState","TextField","Button","useNavigate","makeStyles","Container","Box","Typography","LoginCtx","useStyles","theme","container","height","backgroundImage","backgroundSize","position","form","backgroundColor","boxShadow","width","padding","left","top","transform","borderRadius","breakpoints","down","title","textAlign","fontFamily","fontSize","marginBottom","color","loginForm","display","justifyContent","flexWrap","login_form_input","margin","error","fontWeight","paddingTop","paddingLeft","login_btn","marginTop","multilineColor","Signup","props","setUserLoggedIn","setLoggedIn","classes","localStorage","getItem","setItem","navigate","name","email","password","cPassword","setRegisterForm","id","errors","setErrors","RegisterValuesHandler","event","preState","target","value","RegisterSubmitHandler","preventDefault","userId","JSON","parse","user","status","RegisterValidation","users","push","stringify","className","eName","style","eEmail","eCPassword"],"mappings":"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","sourcesContent":["import React, { useContext , useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { LoginCtx } from \"../../context/LoginContex\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"calc(100vh - 65px)\",\n    backgroundImage: 'url(\"/images/login.jpg\")',\n    backgroundSize: \"cover\",\n    position: \"relative\",\n  },\n  form: {\n    backgroundColor: \"#2b2d42\",\n    boxShadow: \"0 10px 20px rgba(0, 0, 0, 0.19), 0 3px 6px rgba(0, 0, 0, 0.23)\",\n    width: \"40%\",\n    padding: \"20px\",\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"40%\",\n    transform: \"translate(-50%, -40%)\",\n    borderRadius: \"5px\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"60%\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"85%\",\n    },\n  },\n  title: {\n    textAlign: \"center\",\n    fontFamily: \"Arial, Helvetica, sans-serif\",\n    fontSize: \"32px\",\n    marginBottom: \"15px\",\n    color: \"white\",\n  },\n  loginForm: {\n    marginBottom: \"20px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    position: \"relative\",\n  },\n  login_form_input: {\n    width: \"90%\",\n    margin: \"auto\",\n  },\n  error: {\n    color: \"#ff6a6a\",\n    fontWeight: \"300\",\n    fontSize: \"14px\",\n    width: \"100%\",\n    paddingTop: \"5px\",\n    paddingLeft: \"2em\",\n  },\n\n  login_btn: {\n    display: \"block\",\n    margin: \"auto\",\n    padding: \"10px 25px\",\n    fontSize: \"16px\",\n    marginTop: \"20px\",\n  },\n  multilineColor: {\n    color: \"white\",\n  },\n}));\n\nexport const Signup = (props) => {\n\n  const {setUserLoggedIn , setLoggedIn } = useContext(LoginCtx);\n\n  const classes = useStyles();\n\n  if (!localStorage.getItem(\"count\")) {\n    localStorage.setItem(\"count\", 1);\n  }\n\n  const navigate = useNavigate();\n\n  const [{ name, email, password, cPassword }, setRegisterForm] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    cPassword: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const RegisterValuesHandler = (event) => {\n    setRegisterForm((preState) => {\n      return {\n        ...preState,\n        [event.target.name]: event.target.value,\n      };\n    });\n  };\n\n  const RegisterSubmitHandler = (event) => {\n    event.preventDefault();\n    let userId = JSON.parse(localStorage.getItem(\"count\"));\n    let user = {\n      id: userId,\n      name: name,\n      email: email,\n      password: password,\n    };\n    const status = RegisterValidation(user);\n    if (status) {\n      if (localStorage.getItem(\"users\")) {\n        let users = JSON.parse(localStorage.getItem(\"users\"));\n        users.push(user);\n        localStorage.setItem(\"users\", JSON.stringify(users));\n      } else {\n        localStorage.setItem(\"users\", JSON.stringify([user]));\n      }\n      setLoggedIn(true);\n      localStorage.setItem(\"count\", JSON.stringify(userId + 1));\n      localStorage.setItem(\"userLoggedIn\", JSON.stringify(user));\n      setUserLoggedIn(user);\n      navigate(\"/\");\n    }\n  };\n\n  return (\n    <Container\n      height=\"calc(100vh - 65px)\"\n      maxWidth=\"xl\"\n      className={classes.container}\n    >\n      <Box className={classes.form} autoComplete=\"off\">\n        <Typography className={classes.title}>SignUp</Typography>\n        <Box maxWidth=\"xl\" className={classes.loginForm}>\n          <TextField\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n            error={errors.eName ? true : false}\n            onChange={RegisterValuesHandler}\n            name=\"name\"\n            value={name}\n            className={classes.login_form_input}\n            label=\"Full Name\"\n            InputLabelProps={{ style: { color: \"#ddd\" } }}\n            autoComplete = \"off\"\n          />\n          <Box className={classes.error}>{errors.eName}</Box>\n        </Box>\n        <Box className={classes.loginForm}>\n          <TextField\n            error={errors.eEmail ? true : false}\n            onChange={RegisterValuesHandler}\n            name=\"email\"\n            value={email}\n            className={classes.login_form_input}\n            label=\"Email\"\n            InputLabelProps={{ style: { color: \"#ddd\" } }}\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n            autoComplete = \"off\"\n          />\n          <Box className={classes.error}>{errors.eEmail}</Box>\n        </Box>\n        <Box className={classes.loginForm}>\n          <TextField\n            onChange={RegisterValuesHandler}\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            className={classes.login_form_input}\n            label=\"Password\"\n            InputLabelProps={{ style: { color: \"#ddd\" } }}\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n            autoComplete = \"off\"\n          />\n        </Box>\n        <Box className={classes.loginForm}>\n          <TextField\n            error={errors.eCPassword ? true : false}\n            onChange={RegisterValuesHandler}\n            name=\"cPassword\"\n            value={cPassword}\n            type=\"password\"\n            className={classes.login_form_input}\n            label=\"Confirm Password\"\n            InputLabelProps={{ style: { color: \"#ddd\" } }}\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n            autoComplete = \"off\"\n          />\n          <Box className={classes.error}>{errors.eCPassword}</Box>\n        </Box>\n        <Button\n          onClick={RegisterSubmitHandler}\n          className={classes.login_btn}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Register\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}