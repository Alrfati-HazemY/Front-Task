{"ast":null,"code":"var _jsxFileName = \"/home/hazem/Documents/Front-Task/src/views/Signup/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    height: \"calc(100vh - 65px)\",\n    backgroundImage: 'url(\"/images/login.jpg\")',\n    backgroundSize: \"cover\",\n    position: \"relative\"\n  },\n  form: {\n    backgroundColor: \"#2b2d42\",\n    boxShadow: \"0 10px 20px rgba(0, 0, 0, 0.19), 0 3px 6px rgba(0, 0, 0, 0.23)\",\n    width: \"40%\",\n    padding: \"20px\",\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"40%\",\n    transform: \"translate(-50%, -40%)\",\n    borderRadius: \"5px\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"60%\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"85%\"\n    }\n  },\n  title: {\n    textAlign: \"center\",\n    fontFamily: \"Arial, Helvetica, sans-serif\",\n    fontSize: \"32px\",\n    marginBottom: \"15px\",\n    color: \"white\"\n  },\n  loginForm: {\n    marginBottom: \"20px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    position: \"relative\"\n  },\n  login_form_input: {\n    width: \"90%\",\n    margin: \"auto\"\n  },\n  error: {\n    color: \"#ff6a6a\",\n    fontWeight: \"300\",\n    fontSize: \"14px\",\n    width: \"100%\",\n    paddingTop: \"5px\",\n    paddingLeft: \"1.55em\"\n  },\n  loginError: {\n    textAlign: \"center\",\n    marginTop: \"20px\",\n    fontSize: \"16px !important\",\n    opacity: 0\n  },\n  login_btn: {\n    display: \"block\",\n    margin: \"auto\",\n    padding: \"10px 25px\",\n    fontSize: \"16px\",\n    marginTop: \"20px\"\n  },\n  login_error: {\n    textAlign: \"center\",\n    marginTop: \"20px\",\n    fontSize: \"16px !important\",\n    opacity: \"0\"\n  },\n  login_error_opacity: {\n    opacity: \"1\"\n  },\n  multilineColor: {\n    color: \"white\"\n  }\n}));\nexport const Signup = props => {\n  _s();\n\n  const classes = useStyles();\n\n  if (!localStorage.getItem(\"count\")) {\n    localStorage.setItem(\"count\", 1);\n  }\n\n  const navigate = useNavigate();\n  const [{\n    id,\n    name,\n    email,\n    password,\n    cPassword\n  }, setRegisterForm] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    cPassword: \"\"\n  });\n  const [errors, setErrors] = useState({});\n\n  const RegisterValuesHandler = event => {\n    setRegisterForm(preState => {\n      return { ...preState,\n        [event.target.name]: event.target.value\n      };\n    });\n  };\n\n  const RegisterValidation = _ref => {\n    let {\n      name,\n      email,\n      password\n    } = _ref;\n    let regexEmail = /^[A-z0-9._-]+@(hotmail|gmail|yahoo).com$/;\n    let regexName = /^[A-z]{3,}$/;\n    let errorForm = {\n      eName: \"\",\n      eEmail: \"\",\n      ePassword: \"\",\n      eCPassword: \"\"\n    };\n\n    if (name.trim().length === 0 || email.trim().length === 0 || password.trim().length === 0 || cPassword.trim().length === 0) {\n      alert(\"Please fill in all inputs\");\n      return false;\n    } else {\n      let status = false;\n\n      if (!regexName.test(name)) {\n        errorForm.eName = \"name is not valid\";\n        status = true;\n      }\n\n      if (!regexEmail.test(email)) {\n        errorForm.eEmail = \"email is not valid\";\n        status = true;\n      }\n\n      if (password !== cPassword) {\n        errorForm.eCPassword = \"passwords do not match\";\n        status = true;\n      }\n\n      setErrors(() => {\n        return { ...errorForm\n        };\n      });\n      if (status) return false;\n    }\n\n    return true;\n  };\n\n  const RegisterSubmitHandler = event => {\n    event.preventDefault();\n    let userId = JSON.parse(localStorage.getItem(\"count\"));\n    let user = {\n      id: userId,\n      name: name,\n      email: email,\n      password: password\n    };\n    const status = RegisterValidation(user);\n\n    if (status) {\n      if (localStorage.getItem(\"users\")) {\n        let users = JSON.parse(localStorage.getItem(\"users\"));\n        users.push(user);\n        localStorage.setItem(\"users\", JSON.stringify(users));\n      } else {\n        localStorage.setItem(\"users\", JSON.stringify([user]));\n      }\n\n      props.setLoggedIn(true);\n      localStorage.setItem(\"count\", JSON.stringify(userId + 1));\n      localStorage.setItem(\"userLoggedIn\", JSON.stringify(user));\n      props.setUserLoggedIn(user);\n      navigate(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"calc(100vh - 65px)\",\n    maxWidth: \"xl\",\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.form,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        maxWidth: \"xl\",\n        className: classes.loginForm,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          InputProps: {\n            className: classes.multilineColor\n          },\n          error: errors.eName ? true : false,\n          onChange: RegisterValuesHandler,\n          name: \"name\",\n          value: name,\n          className: classes.login_form_input,\n          id: \"standard-basic\",\n          label: \"Full Name\",\n          InputLabelProps: {\n            style: {\n              color: \"#ddd\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.error,\n          children: errors.eName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loginForm,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          error: errors.eEmail ? true : false,\n          onChange: RegisterValuesHandler,\n          name: \"email\",\n          value: email,\n          className: classes.login_form_input,\n          id: \"standard-basic\",\n          label: \"Email\",\n          InputLabelProps: {\n            style: {\n              color: \"#ddd\"\n            }\n          },\n          InputProps: {\n            className: classes.multilineColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.error,\n          children: errors.eEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loginForm,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: RegisterValuesHandler,\n          name: \"password\",\n          value: password,\n          type: \"password\",\n          className: classes.login_form_input,\n          id: \"standard-basic\",\n          label: \"Password\",\n          InputLabelProps: {\n            style: {\n              color: \"#ddd\"\n            }\n          },\n          InputProps: {\n            className: classes.multilineColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.loginForm,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          error: errors.eCPassword ? true : false,\n          onChange: RegisterValuesHandler,\n          name: \"cPassword\",\n          value: cPassword,\n          type: \"password\",\n          className: classes.login_form_input,\n          id: \"standard-basic\",\n          label: \"Confirm Password\",\n          InputLabelProps: {\n            style: {\n              color: \"#ddd\"\n            }\n          },\n          InputProps: {\n            className: classes.multilineColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"error\",\n          children: errors.eCPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: RegisterSubmitHandler,\n        className: classes.login_btn,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"721I6l2cWsoK/hHzcyrwiKRky4c=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/hazem/Documents/Front-Task/src/views/Signup/Signup.js"],"names":["React","useEffect","useState","TextField","Button","useNavigate","makeStyles","Container","Box","Typography","useStyles","theme","container","height","backgroundImage","backgroundSize","position","form","backgroundColor","boxShadow","width","padding","left","top","transform","borderRadius","breakpoints","down","title","textAlign","fontFamily","fontSize","marginBottom","color","loginForm","display","justifyContent","flexWrap","login_form_input","margin","error","fontWeight","paddingTop","paddingLeft","loginError","marginTop","opacity","login_btn","login_error","login_error_opacity","multilineColor","Signup","props","classes","localStorage","getItem","setItem","navigate","id","name","email","password","cPassword","setRegisterForm","errors","setErrors","RegisterValuesHandler","event","preState","target","value","RegisterValidation","regexEmail","regexName","errorForm","eName","eEmail","ePassword","eCPassword","trim","length","alert","status","test","RegisterSubmitHandler","preventDefault","userId","JSON","parse","user","users","push","stringify","setLoggedIn","setUserLoggedIn","className","style"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,oBADC;AAETC,IAAAA,eAAe,EAAE,0BAFR;AAGTC,IAAAA,cAAc,EAAE,OAHP;AAITC,IAAAA,QAAQ,EAAE;AAJD,GAD4B;AAOvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,SAAS,EAAE,gEAFP;AAGJC,IAAAA,KAAK,EAAE,KAHH;AAIJC,IAAAA,OAAO,EAAE,MAJL;AAKJL,IAAAA,QAAQ,EAAE,UALN;AAMJM,IAAAA,IAAI,EAAE,KANF;AAOJC,IAAAA,GAAG,EAAE,KAPD;AAQJC,IAAAA,SAAS,EAAE,uBARP;AASJC,IAAAA,YAAY,EAAE,KATV;AAUJ,KAACd,KAAK,CAACe,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BP,MAAAA,KAAK,EAAE;AADuB,KAV5B;AAaJ,KAACT,KAAK,CAACe,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BP,MAAAA,KAAK,EAAE;AADuB;AAb5B,GAPiC;AAwBvCQ,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,UAAU,EAAE,8BAFP;AAGLC,IAAAA,QAAQ,EAAE,MAHL;AAILC,IAAAA,YAAY,EAAE,MAJT;AAKLC,IAAAA,KAAK,EAAE;AALF,GAxBgC;AA+BvCC,EAAAA,SAAS,EAAE;AACTF,IAAAA,YAAY,EAAE,MADL;AAETG,IAAAA,OAAO,EAAE,MAFA;AAGTC,IAAAA,cAAc,EAAE,QAHP;AAITC,IAAAA,QAAQ,EAAE,MAJD;AAKTrB,IAAAA,QAAQ,EAAE;AALD,GA/B4B;AAsCvCsB,EAAAA,gBAAgB,EAAE;AAChBlB,IAAAA,KAAK,EAAE,KADS;AAEhBmB,IAAAA,MAAM,EAAE;AAFQ,GAtCqB;AA0CvCC,EAAAA,KAAK,EAAE;AACLP,IAAAA,KAAK,EAAE,SADF;AAELQ,IAAAA,UAAU,EAAE,KAFP;AAGLV,IAAAA,QAAQ,EAAE,MAHL;AAILX,IAAAA,KAAK,EAAE,MAJF;AAKLsB,IAAAA,UAAU,EAAE,KALP;AAMLC,IAAAA,WAAW,EAAE;AANR,GA1CgC;AAkDvCC,EAAAA,UAAU,EAAE;AACVf,IAAAA,SAAS,EAAE,QADD;AAEVgB,IAAAA,SAAS,EAAE,MAFD;AAGVd,IAAAA,QAAQ,EAAE,iBAHA;AAIVe,IAAAA,OAAO,EAAE;AAJC,GAlD2B;AAwDvCC,EAAAA,SAAS,EAAE;AACTZ,IAAAA,OAAO,EAAE,OADA;AAETI,IAAAA,MAAM,EAAE,MAFC;AAGTlB,IAAAA,OAAO,EAAE,WAHA;AAITU,IAAAA,QAAQ,EAAE,MAJD;AAKTc,IAAAA,SAAS,EAAE;AALF,GAxD4B;AA+DvCG,EAAAA,WAAW,EAAE;AACXnB,IAAAA,SAAS,EAAE,QADA;AAEXgB,IAAAA,SAAS,EAAE,MAFA;AAGXd,IAAAA,QAAQ,EAAE,iBAHC;AAIXe,IAAAA,OAAO,EAAE;AAJE,GA/D0B;AAsEvCG,EAAAA,mBAAmB,EAAE;AACnBH,IAAAA,OAAO,EAAE;AADU,GAtEkB;AAyEvCI,EAAAA,cAAc,EAAE;AACdjB,IAAAA,KAAK,EAAE;AADO;AAzEuB,CAAZ,CAAD,CAA5B;AA8EA,OAAO,MAAMkB,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAMC,OAAO,GAAG3C,SAAS,EAAzB;;AAEA,MAAI,CAAC4C,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAClCD,IAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8B,CAA9B;AACD;;AAED,QAAMC,QAAQ,GAAGpD,WAAW,EAA5B;AAEA,QAAM,CAAC;AAAEqD,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,GAAD,EAA2CC,eAA3C,IAA8D7D,QAAQ,CAAC;AAC3EwD,IAAAA,EAAE,EAAE,EADuE;AAE3EC,IAAAA,IAAI,EAAE,EAFqE;AAG3EC,IAAAA,KAAK,EAAE,EAHoE;AAI3EC,IAAAA,QAAQ,EAAE,EAJiE;AAK3EC,IAAAA,SAAS,EAAE;AALgE,GAAD,CAA5E;AAQA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsB/D,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMgE,qBAAqB,GAAIC,KAAD,IAAW;AACvCJ,IAAAA,eAAe,CAAEK,QAAD,IAAc;AAC5B,aAAO,EACL,GAAGA,QADE;AAEL,SAACD,KAAK,CAACE,MAAN,CAAaV,IAAd,GAAqBQ,KAAK,CAACE,MAAN,CAAaC;AAF7B,OAAP;AAID,KALc,CAAf;AAMD,GAPD;;AASA,QAAMC,kBAAkB,GAAG,QAA+B;AAAA,QAA9B;AAAEZ,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA8B;AACxD,QAAIW,UAAU,GAAG,0CAAjB;AACA,QAAIC,SAAS,GAAG,aAAhB;AACA,QAAIC,SAAS,GAAG;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE,EAArB;AAAyBC,MAAAA,SAAS,EAAE,EAApC;AAAwCC,MAAAA,UAAU,EAAE;AAApD,KAAhB;;AAEA,QACEnB,IAAI,CAACoB,IAAL,GAAYC,MAAZ,KAAuB,CAAvB,IACApB,KAAK,CAACmB,IAAN,GAAaC,MAAb,KAAwB,CADxB,IAEAnB,QAAQ,CAACkB,IAAT,GAAgBC,MAAhB,KAA2B,CAF3B,IAGAlB,SAAS,CAACiB,IAAV,GAAiBC,MAAjB,KAA4B,CAJ9B,EAKE;AACAC,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACA,aAAO,KAAP;AACD,KARD,MAQO;AACL,UAAIC,MAAM,GAAG,KAAb;;AACA,UAAI,CAACT,SAAS,CAACU,IAAV,CAAexB,IAAf,CAAL,EAA2B;AACzBe,QAAAA,SAAS,CAACC,KAAV,GAAkB,mBAAlB;AACAO,QAAAA,MAAM,GAAG,IAAT;AACD;;AAED,UAAI,CAACV,UAAU,CAACW,IAAX,CAAgBvB,KAAhB,CAAL,EAA6B;AAC3Bc,QAAAA,SAAS,CAACE,MAAV,GAAmB,oBAAnB;AACAM,QAAAA,MAAM,GAAG,IAAT;AACD;;AAED,UAAIrB,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BY,QAAAA,SAAS,CAACI,UAAV,GAAuB,wBAAvB;AACAI,QAAAA,MAAM,GAAG,IAAT;AACD;;AAEDjB,MAAAA,SAAS,CAAC,MAAM;AACd,eAAO,EAAE,GAAGS;AAAL,SAAP;AACD,OAFQ,CAAT;AAGA,UAAIQ,MAAJ,EAAY,OAAO,KAAP;AACb;;AACD,WAAO,IAAP;AACD,GApCD;;AAsCA,QAAME,qBAAqB,GAAIjB,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACkB,cAAN;AACA,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWlC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAb;AACA,QAAIkC,IAAI,GAAG;AACT/B,MAAAA,EAAE,EAAE4B,MADK;AAET3B,MAAAA,IAAI,EAAEA,IAFG;AAGTC,MAAAA,KAAK,EAAEA,KAHE;AAITC,MAAAA,QAAQ,EAAEA;AAJD,KAAX;AAMA,UAAMqB,MAAM,GAAGX,kBAAkB,CAACkB,IAAD,CAAjC;;AACA,QAAIP,MAAJ,EAAY;AACV,UAAI5B,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AACjC,YAAImC,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWlC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACAmC,QAAAA,KAAK,CAACC,IAAN,CAAWF,IAAX;AACAnC,QAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8B+B,IAAI,CAACK,SAAL,CAAeF,KAAf,CAA9B;AACD,OAJD,MAIO;AACLpC,QAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8B+B,IAAI,CAACK,SAAL,CAAe,CAACH,IAAD,CAAf,CAA9B;AACD;;AAEDrC,MAAAA,KAAK,CAACyC,WAAN,CAAkB,IAAlB;AACAvC,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8B+B,IAAI,CAACK,SAAL,CAAeN,MAAM,GAAG,CAAxB,CAA9B;AACAhC,MAAAA,YAAY,CAACE,OAAb,CAAqB,cAArB,EAAqC+B,IAAI,CAACK,SAAL,CAAeH,IAAf,CAArC;AACArC,MAAAA,KAAK,CAAC0C,eAAN,CAAsBL,IAAtB;AACAhC,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;AACF,GAzBD;;AA2BA,sBACE,QAAC,SAAD;AACE,IAAA,MAAM,EAAC,oBADT;AAEE,IAAA,QAAQ,EAAC,IAFX;AAGE,IAAA,SAAS,EAAEJ,OAAO,CAACzC,SAHrB;AAAA,2BAKE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEyC,OAAO,CAACpC,IAAxB;AAA8B,MAAA,YAAY,EAAC,KAA3C;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEoC,OAAO,CAACzB,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAC,IAAd;AAAmB,QAAA,SAAS,EAAEyB,OAAO,CAACnB,SAAtC;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,UAAU,EAAE;AACV6D,YAAAA,SAAS,EAAE1C,OAAO,CAACH;AADT,WADd;AAIE,UAAA,KAAK,EAAEc,MAAM,CAACW,KAAP,GAAe,IAAf,GAAsB,KAJ/B;AAKE,UAAA,QAAQ,EAAET,qBALZ;AAME,UAAA,IAAI,EAAC,MANP;AAOE,UAAA,KAAK,EAAEP,IAPT;AAQE,UAAA,SAAS,EAAEN,OAAO,CAACf,gBARrB;AASE,UAAA,EAAE,EAAC,gBATL;AAUE,UAAA,KAAK,EAAC,WAVR;AAWE,UAAA,eAAe,EAAE;AAAE0D,YAAAA,KAAK,EAAE;AAAE/D,cAAAA,KAAK,EAAE;AAAT;AAAT;AAXnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAEoB,OAAO,CAACb,KAAxB;AAAA,oBAAgCwB,MAAM,CAACW;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAkBE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEtB,OAAO,CAACnB,SAAxB;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAE8B,MAAM,CAACY,MAAP,GAAgB,IAAhB,GAAuB,KADhC;AAEE,UAAA,QAAQ,EAAEV,qBAFZ;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,KAAK,EAAEN,KAJT;AAKE,UAAA,SAAS,EAAEP,OAAO,CAACf,gBALrB;AAME,UAAA,EAAE,EAAC,gBANL;AAOE,UAAA,KAAK,EAAC,OAPR;AAQE,UAAA,eAAe,EAAE;AAAE0D,YAAAA,KAAK,EAAE;AAAE/D,cAAAA,KAAK,EAAE;AAAT;AAAT,WARnB;AASE,UAAA,UAAU,EAAE;AACV8D,YAAAA,SAAS,EAAE1C,OAAO,CAACH;AADT;AATd;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAEG,OAAO,CAACb,KAAxB;AAAA,oBAAgCwB,MAAM,CAACY;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAkCE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEvB,OAAO,CAACnB,SAAxB;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,QAAQ,EAAEgC,qBADZ;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,KAAK,EAAEL,QAHT;AAIE,UAAA,IAAI,EAAC,UAJP;AAKE,UAAA,SAAS,EAAER,OAAO,CAACf,gBALrB;AAME,UAAA,EAAE,EAAC,gBANL;AAOE,UAAA,KAAK,EAAC,UAPR;AAQE,UAAA,eAAe,EAAE;AAAE0D,YAAAA,KAAK,EAAE;AAAE/D,cAAAA,KAAK,EAAE;AAAT;AAAT,WARnB;AASE,UAAA,UAAU,EAAE;AACV8D,YAAAA,SAAS,EAAE1C,OAAO,CAACH;AADT;AATd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlCF,eAiDE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEG,OAAO,CAACnB,SAAxB;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAE8B,MAAM,CAACc,UAAP,GAAoB,IAApB,GAA2B,KADpC;AAEE,UAAA,QAAQ,EAAEZ,qBAFZ;AAGE,UAAA,IAAI,EAAC,WAHP;AAIE,UAAA,KAAK,EAAEJ,SAJT;AAKE,UAAA,IAAI,EAAC,UALP;AAME,UAAA,SAAS,EAAET,OAAO,CAACf,gBANrB;AAOE,UAAA,EAAE,EAAC,gBAPL;AAQE,UAAA,KAAK,EAAC,kBARR;AASE,UAAA,eAAe,EAAE;AAAE0D,YAAAA,KAAK,EAAE;AAAE/D,cAAAA,KAAK,EAAE;AAAT;AAAT,WATnB;AAUE,UAAA,UAAU,EAAE;AACV8D,YAAAA,SAAS,EAAE1C,OAAO,CAACH;AADT;AAVd;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBc,MAAM,CAACc;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjDF,eAkEE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEM,qBADX;AAEE,QAAA,SAAS,EAAE/B,OAAO,CAACN,SAFrB;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlEF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAmFD,CAhLM;;GAAMI,M;UACKzC,S,EAMCL,W;;;KAPN8C,M","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"calc(100vh - 65px)\",\n    backgroundImage: 'url(\"/images/login.jpg\")',\n    backgroundSize: \"cover\",\n    position: \"relative\",\n  },\n  form: {\n    backgroundColor: \"#2b2d42\",\n    boxShadow: \"0 10px 20px rgba(0, 0, 0, 0.19), 0 3px 6px rgba(0, 0, 0, 0.23)\",\n    width: \"40%\",\n    padding: \"20px\",\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"40%\",\n    transform: \"translate(-50%, -40%)\",\n    borderRadius: \"5px\",\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"60%\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"85%\",\n    },\n  },\n  title: {\n    textAlign: \"center\",\n    fontFamily: \"Arial, Helvetica, sans-serif\",\n    fontSize: \"32px\",\n    marginBottom: \"15px\",\n    color: \"white\",\n  },\n  loginForm: {\n    marginBottom: \"20px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    position: \"relative\",\n  },\n  login_form_input: {\n    width: \"90%\",\n    margin: \"auto\",\n  },\n  error: {\n    color: \"#ff6a6a\",\n    fontWeight: \"300\",\n    fontSize: \"14px\",\n    width: \"100%\",\n    paddingTop: \"5px\",\n    paddingLeft: \"1.55em\",\n  },\n  loginError: {\n    textAlign: \"center\",\n    marginTop: \"20px\",\n    fontSize: \"16px !important\",\n    opacity: 0,\n  },\n  login_btn: {\n    display: \"block\",\n    margin: \"auto\",\n    padding: \"10px 25px\",\n    fontSize: \"16px\",\n    marginTop: \"20px\",\n  },\n  login_error: {\n    textAlign: \"center\",\n    marginTop: \"20px\",\n    fontSize: \"16px !important\",\n    opacity: \"0\",\n  },\n\n  login_error_opacity: {\n    opacity: \"1\",\n  },\n  multilineColor: {\n    color: \"white\",\n  },\n}));\n\nexport const Signup = (props) => {\n  const classes = useStyles();\n\n  if (!localStorage.getItem(\"count\")) {\n    localStorage.setItem(\"count\", 1);\n  }\n\n  const navigate = useNavigate();\n\n  const [{ id, name, email, password, cPassword }, setRegisterForm] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    cPassword: \"\",\n  });\n\n  const [errors, setErrors] = useState({});\n\n  const RegisterValuesHandler = (event) => {\n    setRegisterForm((preState) => {\n      return {\n        ...preState,\n        [event.target.name]: event.target.value,\n      };\n    });\n  };\n\n  const RegisterValidation = ({ name, email, password }) => {\n    let regexEmail = /^[A-z0-9._-]+@(hotmail|gmail|yahoo).com$/;\n    let regexName = /^[A-z]{3,}$/;\n    let errorForm = { eName: \"\", eEmail: \"\", ePassword: \"\", eCPassword: \"\" };\n\n    if (\n      name.trim().length === 0 ||\n      email.trim().length === 0 ||\n      password.trim().length === 0 ||\n      cPassword.trim().length === 0\n    ) {\n      alert(\"Please fill in all inputs\");\n      return false;\n    } else {\n      let status = false;\n      if (!regexName.test(name)) {\n        errorForm.eName = \"name is not valid\";\n        status = true;\n      }\n\n      if (!regexEmail.test(email)) {\n        errorForm.eEmail = \"email is not valid\";\n        status = true;\n      }\n\n      if (password !== cPassword) {\n        errorForm.eCPassword = \"passwords do not match\";\n        status = true;\n      }\n\n      setErrors(() => {\n        return { ...errorForm };\n      });\n      if (status) return false;\n    }\n    return true;\n  };\n\n  const RegisterSubmitHandler = (event) => {\n    event.preventDefault();\n    let userId = JSON.parse(localStorage.getItem(\"count\"));\n    let user = {\n      id: userId,\n      name: name,\n      email: email,\n      password: password,\n    };\n    const status = RegisterValidation(user);\n    if (status) {\n      if (localStorage.getItem(\"users\")) {\n        let users = JSON.parse(localStorage.getItem(\"users\"));\n        users.push(user);\n        localStorage.setItem(\"users\", JSON.stringify(users));\n      } else {\n        localStorage.setItem(\"users\", JSON.stringify([user]));\n      }\n\n      props.setLoggedIn(true);\n      localStorage.setItem(\"count\", JSON.stringify(userId + 1));\n      localStorage.setItem(\"userLoggedIn\", JSON.stringify(user));\n      props.setUserLoggedIn(user);\n      navigate(\"/\");\n    }\n  };\n\n  return (\n    <Container\n      height=\"calc(100vh - 65px)\"\n      maxWidth=\"xl\"\n      className={classes.container}\n    >\n      <Box className={classes.form} autoComplete=\"off\">\n        <Typography className={classes.title}>SignUp</Typography>\n        <Box maxWidth=\"xl\" className={classes.loginForm}>\n          <TextField\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n            error={errors.eName ? true : false}\n            onChange={RegisterValuesHandler}\n            name=\"name\"\n            value={name}\n            className={classes.login_form_input}\n            id=\"standard-basic\"\n            label=\"Full Name\"\n            InputLabelProps={{ style: { color: \"#ddd\" } }}\n          />\n          <Box className={classes.error}>{errors.eName}</Box>\n        </Box>\n        <Box className={classes.loginForm}>\n          <TextField\n            error={errors.eEmail ? true : false}\n            onChange={RegisterValuesHandler}\n            name=\"email\"\n            value={email}\n            className={classes.login_form_input}\n            id=\"standard-basic\"\n            label=\"Email\"\n            InputLabelProps={{ style: { color: \"#ddd\" } }}\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n          />\n          <Box className={classes.error}>{errors.eEmail}</Box>\n        </Box>\n        <Box className={classes.loginForm}>\n          <TextField\n            onChange={RegisterValuesHandler}\n            name=\"password\"\n            value={password}\n            type=\"password\"\n            className={classes.login_form_input}\n            id=\"standard-basic\"\n            label=\"Password\"\n            InputLabelProps={{ style: { color: \"#ddd\" } }}\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n          />\n        </Box>\n        <Box className={classes.loginForm}>\n          <TextField\n            error={errors.eCPassword ? true : false}\n            onChange={RegisterValuesHandler}\n            name=\"cPassword\"\n            value={cPassword}\n            type=\"password\"\n            className={classes.login_form_input}\n            id=\"standard-basic\"\n            label=\"Confirm Password\"\n            InputLabelProps={{ style: { color: \"#ddd\" } }}\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n          />\n          <Box className=\"error\">{errors.eCPassword}</Box>\n        </Box>\n        <Button\n          onClick={RegisterSubmitHandler}\n          className={classes.login_btn}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Register\n        </Button>\n      </Box>\n    </Container>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}