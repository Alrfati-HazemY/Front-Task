{"ast":null,"code":"const loginFormHandler = (event, _ref) => {\n  let {} = _ref;\n  event.preventDefault();\n\n  if (email.trim().length === 0 || password.trim().length === 0) {\n    setError(\"Please fill in all inputs\");\n  } else if (users) {\n    let user = users.filter((ele, index) => {\n      return ele.email === email;\n    })[0];\n\n    if (user) {\n      if (user.password === password) {\n        setLoggedIn(true);\n        localStorage.setItem(\"userLoggedIn\", JSON.stringify(user));\n        setUserLoggedIn(user);\n        navigate(\"/\");\n      } else {\n        setError(\"Password is not correct\");\n      }\n    } else {\n      setError(\"Email is not exist\");\n    }\n  } else {\n    setError(\"Email is not exist\");\n  }\n};\n\nmodule.exports = {\n  loginFormHandler\n};","map":{"version":3,"sources":["/home/hazem/Documents/Front-Task/src/views/Loign/helper/LoginHelper.js"],"names":["loginFormHandler","event","preventDefault","email","trim","length","password","setError","users","user","filter","ele","index","setLoggedIn","localStorage","setItem","JSON","stringify","setUserLoggedIn","navigate","module","exports"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,CAACC,KAAD,WAAgB;AAAA,MAAP,EAAO;AACrCA,EAAAA,KAAK,CAACC,cAAN;;AACA,MAAIC,KAAK,CAACC,IAAN,GAAaC,MAAb,KAAwB,CAAxB,IAA6BC,QAAQ,CAACF,IAAT,GAAgBC,MAAhB,KAA2B,CAA5D,EAA+D;AAC7DE,IAAAA,QAAQ,CAAC,2BAAD,CAAR;AACD,GAFD,MAEO,IAAIC,KAAJ,EAAW;AAChB,QAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACtC,aAAOD,GAAG,CAACR,KAAJ,KAAcA,KAArB;AACD,KAFU,EAER,CAFQ,CAAX;;AAGA,QAAIM,IAAJ,EAAU;AACR,UAAIA,IAAI,CAACH,QAAL,KAAkBA,QAAtB,EAAgC;AAC9BO,QAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAArC;AACAS,QAAAA,eAAe,CAACT,IAAD,CAAf;AACAU,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,OALD,MAKO;AACLZ,QAAAA,QAAQ,CAAC,yBAAD,CAAR;AACD;AACF,KATD,MASO;AACLA,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD;AACF,GAhBM,MAgBA;AACLA,IAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD;AACF,CAvBH;;AAyBAa,MAAM,CAACC,OAAP,GAAiB;AACbrB,EAAAA;AADa,CAAjB","sourcesContent":["const loginFormHandler = (event , {}) => {\n    event.preventDefault();\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      setError(\"Please fill in all inputs\");\n    } else if (users) {\n      let user = users.filter((ele, index) => {\n        return ele.email === email;\n      })[0];\n      if (user) {\n        if (user.password === password) {\n          setLoggedIn(true);\n          localStorage.setItem(\"userLoggedIn\", JSON.stringify(user));\n          setUserLoggedIn(user);\n          navigate(\"/\");\n        } else {\n          setError(\"Password is not correct\");\n        }\n      } else {\n        setError(\"Email is not exist\");\n      }\n    } else {\n      setError(\"Email is not exist\");\n    }\n  };\n\nmodule.exports = {\n    loginFormHandler\n}"]},"metadata":{},"sourceType":"module"}